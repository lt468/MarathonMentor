# Generated by Django 4.2.3 on 2023-10-22 07:15

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import training_plan.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='RunnerUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dob', models.DateField(verbose_name='Date of birth')),
                ('fitness_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=50)),
                ('date_of_marathon', models.DateField(blank=True, help_text='Date of marathon', null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='runneruser_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='runneruser_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', training_plan.models.RunnerUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MarathonPlan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ScheduledRun',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dict_id', models.PositiveIntegerField(blank=True, null=True)),
                ('run', models.CharField(default='Training Run', max_length=100)),
                ('run_feel', models.CharField(default='Training session', max_length=200)),
                ('date', models.DateField()),
                ('distance', models.PositiveIntegerField(help_text='Distance in km')),
                ('est_duration', models.PositiveIntegerField(help_text='Duration in minutes')),
                ('est_avg_pace', models.DurationField(blank=True, null=True)),
                ('on', models.PositiveIntegerField(default=0, help_text='Work time in minutes')),
                ('off', models.PositiveIntegerField(default=0, help_text='Rest time in minutes')),
                ('sets', models.PositiveIntegerField(default=0, help_text='Sets')),
                ('marathon_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='training_plan.marathonplan')),
            ],
        ),
        migrations.CreateModel(
            name='CompletedRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('distance', models.PositiveIntegerField(help_text='Distance of completed run in km')),
                ('duration', models.PositiveIntegerField(help_text='Duration of completed run in minutes')),
                ('avg_pace', models.DurationField()),
                ('is_completed', models.BooleanField(default=False)),
                ('scheduled_run', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='training_plan.scheduledrun')),
            ],
        ),
    ]
